// Generated by view binder compiler. Do not edit!
package com.example.fetchchill.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fetchchill.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditProfileBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView backToSetting;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final EditText etAge;

  @NonNull
  public final EditText etBreed;

  @NonNull
  public final EditText etOwner;

  @NonNull
  public final EditText etPetName;

  @NonNull
  public final ImageView imgProfile;

  @NonNull
  public final TextView txtChangePhoto;

  private FragmentEditProfileBinding(@NonNull FrameLayout rootView,
      @NonNull ImageView backToSetting, @NonNull MaterialButton btnSave, @NonNull EditText etAge,
      @NonNull EditText etBreed, @NonNull EditText etOwner, @NonNull EditText etPetName,
      @NonNull ImageView imgProfile, @NonNull TextView txtChangePhoto) {
    this.rootView = rootView;
    this.backToSetting = backToSetting;
    this.btnSave = btnSave;
    this.etAge = etAge;
    this.etBreed = etBreed;
    this.etOwner = etOwner;
    this.etPetName = etPetName;
    this.imgProfile = imgProfile;
    this.txtChangePhoto = txtChangePhoto;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backToSetting;
      ImageView backToSetting = ViewBindings.findChildViewById(rootView, id);
      if (backToSetting == null) {
        break missingId;
      }

      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etAge;
      EditText etAge = ViewBindings.findChildViewById(rootView, id);
      if (etAge == null) {
        break missingId;
      }

      id = R.id.etBreed;
      EditText etBreed = ViewBindings.findChildViewById(rootView, id);
      if (etBreed == null) {
        break missingId;
      }

      id = R.id.etOwner;
      EditText etOwner = ViewBindings.findChildViewById(rootView, id);
      if (etOwner == null) {
        break missingId;
      }

      id = R.id.etPetName;
      EditText etPetName = ViewBindings.findChildViewById(rootView, id);
      if (etPetName == null) {
        break missingId;
      }

      id = R.id.imgProfile;
      ImageView imgProfile = ViewBindings.findChildViewById(rootView, id);
      if (imgProfile == null) {
        break missingId;
      }

      id = R.id.txtChangePhoto;
      TextView txtChangePhoto = ViewBindings.findChildViewById(rootView, id);
      if (txtChangePhoto == null) {
        break missingId;
      }

      return new FragmentEditProfileBinding((FrameLayout) rootView, backToSetting, btnSave, etAge,
          etBreed, etOwner, etPetName, imgProfile, txtChangePhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
