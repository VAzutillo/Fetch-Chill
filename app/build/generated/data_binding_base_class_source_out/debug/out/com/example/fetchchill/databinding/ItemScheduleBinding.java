// Generated by view binder compiler. Do not edit!
package com.example.fetchchill.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fetchchill.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScheduleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgAppointmentService;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView tvAppointmentDate;

  @NonNull
  public final TextView tvAppointmentDetails;

  @NonNull
  public final TextView tvAppointmentService;

  private ItemScheduleBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView imgAppointmentService, @NonNull TextView textView2,
      @NonNull TextView tvAppointmentDate, @NonNull TextView tvAppointmentDetails,
      @NonNull TextView tvAppointmentService) {
    this.rootView = rootView;
    this.imgAppointmentService = imgAppointmentService;
    this.textView2 = textView2;
    this.tvAppointmentDate = tvAppointmentDate;
    this.tvAppointmentDetails = tvAppointmentDetails;
    this.tvAppointmentService = tvAppointmentService;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_schedule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScheduleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgAppointmentService;
      ImageView imgAppointmentService = ViewBindings.findChildViewById(rootView, id);
      if (imgAppointmentService == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.tvAppointmentDate;
      TextView tvAppointmentDate = ViewBindings.findChildViewById(rootView, id);
      if (tvAppointmentDate == null) {
        break missingId;
      }

      id = R.id.tvAppointmentDetails;
      TextView tvAppointmentDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvAppointmentDetails == null) {
        break missingId;
      }

      id = R.id.tvAppointmentService;
      TextView tvAppointmentService = ViewBindings.findChildViewById(rootView, id);
      if (tvAppointmentService == null) {
        break missingId;
      }

      return new ItemScheduleBinding((LinearLayout) rootView, imgAppointmentService, textView2,
          tvAppointmentDate, tvAppointmentDetails, tvAppointmentService);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
